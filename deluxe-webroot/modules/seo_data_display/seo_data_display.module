<?php

/* get seo data info from seo_data table*/

function _seo_data_display_by_pageid($WebPageID = "", $field_names = ""){
  if (arg(0)=='admin'){
    return FALSE;
  }

  if (strpos(current_path(), 'node') !== false) {
    $node = menu_get_object("node", 1, current_path());
    if (isset($node)) {
      $nid  = $node->nid;
      $tenant_id = isset($node->field_tanents['und']) ? $node->field_tanents['und'] : NULL;
      $tanent  = _deluxe_core_tenantinfo($tenant_id);
      $webpage_id = $tanent['webpage_id'];
    }
  }
  elseif (strpos(current_path(), 'taxonomy') !== false) {
    $term =  menu_get_object('taxonomy_term', 2);

    if (empty($term)){
      $term = taxonomy_term_load(arg(2));
    }

    $tenant_id = isset($term->field_tanents['und']) ? $term->field_tanents['und'] : NULL;
    $tanent  = _deluxe_core_tenantinfo($tenant_id);
    $webpage_id = $tanent['webpage_id'];
  }
  else {
    $webpage_id = $WebPageID;
  }

  if (empty($WebPageID)) {
    $webpage_id = _seo_data_get_webpageid_url();
  }
  drupal_add_js(array('webPageId' => $webpage_id ), 'setting');
  $SeoData_table = 'SeoData';
  $path = $_SERVER['REQUEST_URI'];
  if(!empty($path) && strpos($path, 'reviews') !== false || !empty($path) && strpos($path, 'resources') !== false) {
    $SeoData_table = 'SeoData_design_tool';
  }

  $query = db_select($SeoData_table, 'sd');
  if (!empty($field_names)) {
    $query->fields('sd', $field_names);
  }
  else {
    $query->fields('sd', array('CreatedBy', 'Created', 'IsActive', 'SeoDataID', 'WebPageID', 'Version', 'Title', 'Description', 'Canonical', 'SeoCopyBlock', 'Robots', 'PageType', 'Authorship', 'OpenGraphType', 'OpenGraphTitle', 'OpenGraphDescription', 'OpenGraphUrl', 'OpenGraphImage', 'TwitterCard', 'TwitterTitle', 'TwitterDescription', 'TwitterImage', 'TwitterUrl', 'SchemaType', 'SchemaName', 'SchemaDescription', 'SchemaImage'));
  }
  $query->condition('WebPageID', $webpage_id, '=');
  $result = $query->execute()->fetchAssoc();
  return $result;
}

function _seo_data_display_generate_tags($field_names = '') {
  global $base_url;
  $promotion_string = NULL;
  $promotion_string_off = NULL;
  $tanent_info = &drupal_static('tanent_info');
  if( !empty($field_names)) {
    return _seo_data_display_by_pageid("", $field_names);
  }
  $seo_data_tags = _seo_data_display_by_pageid();
  /* set page description*/
  $community_code = $tanent_info['community'];

  $meta_tags = array();

  if ($tanent_info['community_id'] == 1){
    $node_alias =  drupal_get_path_alias(current_path());
    if ((strpos(current_path(), 'node') !== false ) && (arg(0)!='reviews' )){
      $node = menu_get_object("node", 1, current_path());
      $nid  = $node->nid;
      if(isset($node->field_select_product['und'])) {
        $tanent = isset($node->field_select_product['und']) ? $node->field_select_product['und'][0]['node']->field_tanents['und'] : $node->field_tanents['und'];
        $catalog_info = _deluxe_core_tenantinfo($tanent);
        $catalog_id = isset($catalog_info['catalog_id']) ? $catalog_info['catalog_id'] : NULL;
      }
      else if (isset($node->field_select_product_category) && !empty($node->field_category_id['und'])) {
        $category_id = $node->field_category_id['und'][0]['value'];

        $catalog_id = _deluxe_promotion_get_catalogids_from_category_id($category_id);
      }
      if(!empty($catalog_id)) {
        $promotion =  _deluxe_promotion_get_max_promo_for_catalog($catalog_id);
        $promotion_string = isset($promotion['Discount']) ? $promotion['Discount'] . '% ' : NULL;
        $promotion_string_off = isset($promotion_string_off) ? $promotion_string_off . 'Off ' : NULL;
      }


      if (is_array($seo_data_tags)) {
        foreach($seo_data_tags as $key_name => $key_value){
          $seo_data_tags[$key_name] = str_replace("{discount-off}", $promotion_string_off, $key_value);
          $seo_data_tags[$key_name] = str_replace("{discount}", $promotion_string, $seo_data_tags[$key_name]);
          $seo_data_tags[$key_name] = str_replace("{%ComName%}", $community_code, $seo_data_tags[$key_name]);
          $seo_data_tags[$key_name] = str_replace("{%ComDomainName%}", $community_code, $seo_data_tags[$key_name]);
        }
      }
    }
  }else{
    if (is_array($seo_data_tags)) {
      foreach($seo_data_tags as $key_name => $key_value){
        $seo_data_tags[$key_name] = str_replace("{discount-off}", "", $key_value);
        $seo_data_tags[$key_name] = str_replace("{discount}", "", $seo_data_tags[$key_name]);
        $seo_data_tags[$key_name] = str_replace("{%ComName%}", $community_code, $seo_data_tags[$key_name]);
        $seo_data_tags[$key_name] = str_replace("{%ComDomainName%}", $community_code, $seo_data_tags[$key_name]);
      }
    }
  }
  //Prepend base URL to image if not exists
  $open_graph_image_url = parse_url($seo_data_tags['OpenGraphImage']);
  $twitter_image_url = parse_url($seo_data_tags['TwitterImage']);
  $schema_image_url = parse_url($seo_data_tags['SchemaImage']);
  $seo_data_tags['OpenGraphImage'] = (!isset($open_graph_image_url['host']) && strtolower($open_graph_image_url['path'])!='n/a') ? $base_url . $seo_data_tags['OpenGraphImage'] : $seo_data_tags['OpenGraphImage'];
  $seo_data_tags['TwitterImage'] = (!isset($twitter_image_url['host']) && strtolower($twitter_image_url['path'])!='n/a') ? $base_url . $seo_data_tags['TwitterImage'] : $seo_data_tags['TwitterImage'];
  $seo_data_tags['SchemaImage'] = (!isset($schema_image_url['host']) && strtolower($schema_image_url['path'])!='n/a') ? $base_url . $seo_data_tags['SchemaImage'] : $seo_data_tags['SchemaImage'];
  
  $na_value = "N/A";
  $meta_tags = array(
    0 => array(
      'meta' => 'meta',
      'name' => "msvalidate.01",
      'content' => variable_get('msvalidate_01_' . $community_code),
    ),
    1 => array(
      'meta' => 'meta',
        'name' => 'y_key',
          'content' => variable_get('y_key_' . $community_code),
    ),
    2 => array(
      'meta' => 'meta',
        'name' => 'p:domain_verify',
          'content' => variable_get('domain_verify_' . $community_code),
    ),
    3 => array(
      'meta' => 'meta',
        'name' => 'google-site-verification',
          'content' => variable_get('google_site_verification_' . $community_code),
    ),
    4 => array(
      'meta' => 'meta',
      'name' => 'description',
      'content' => (strcasecmp($seo_data_tags['Description'], $na_value)) ? $seo_data_tags['Description']:''

    ),
    5 => array(
      'meta' => 'meta',
      'itemprop' => 'type',
      'content' => (strcasecmp($seo_data_tags['SchemaType'], $na_value )) ? $seo_data_tags['SchemaType'] : ''
    ),
    6 => array(
      'meta' => 'meta',
      'itemprop' => 'name',
      'content' => (strcasecmp($seo_data_tags['SchemaName'], $na_value)) ? $seo_data_tags['SchemaName']:''
    ),
    7 => array(
      'meta' => 'meta',
      'itemprop' => 'description',
      'content' => (strcasecmp($seo_data_tags['SchemaDescription'], $na_value)) ? $seo_data_tags['SchemaDescription']:''
    ),
    8 => array(
      'meta' => 'meta',
      'itemprop' => 'image',
      'content' => (strcasecmp($seo_data_tags['SchemaImage'], $na_value )) ? $seo_data_tags['SchemaImage']:''
    ),
    9 => array(
      'meta' => 'meta',
      'name' => 'ROBOTS',
      'content' => (strcasecmp($seo_data_tags['Robots'], $na_value )) ? $seo_data_tags['Robots']:''
    ),
    10 => array(
      'link' => 'link',
      'rel' => 'canonical',
      'href' => (strcasecmp($seo_data_tags['Canonical'], $na_value )) ? $seo_data_tags['Canonical']:''
    ),
    11 => array(
      'meta' => 'meta',
      'name' => 'authorship',
      'content' => (strcasecmp($seo_data_tags['Authorship'], $na_value )) ? $seo_data_tags['Authorship']:''
    ),
    12 => array(
      'meta' => 'meta',
      'property' => 'og:type',
      'content' => (strcasecmp($seo_data_tags['OpenGraphType'], $na_value)) ? $seo_data_tags['OpenGraphType']:''
    ),
    13 => array(
      'meta' => 'meta',
      'property' => 'og:title',
      'content' => (strcasecmp($seo_data_tags['OpenGraphTitle'],$na_value))?$seo_data_tags['OpenGraphTitle' ]:''
    ),
    14 => array(
      'meta' => 'meta',
      'property' => 'og:description',
      'content' => (strcasecmp($seo_data_tags['OpenGraphDescription'], $na_value)) ? $seo_data_tags['OpenGraphDescription']:''
    ),
    15 => array(
      'meta' => 'meta',
      'property' => 'og:url',
      'content' => (strcasecmp($seo_data_tags['OpenGraphUrl'], $na_value)) ? $seo_data_tags['OpenGraphUrl']:''
    ),
    16 => array(
      'meta' => 'meta',
      'property' => 'og:image',
      'content' => (strcasecmp($seo_data_tags['OpenGraphImage'], $na_value)) ? $seo_data_tags['OpenGraphImage']:''
    ),
    17 => array(
      'meta' => 'meta',
      'name' => 'twitter:card',
      'content' => (strcasecmp($seo_data_tags['TwitterCard'],$na_value))?$seo_data_tags['TwitterCard']:''
    ),
    18 => array(
      'meta' => 'meta',
      'name' => 'twitter:title',
      'content' => (strcasecmp($seo_data_tags['TwitterTitle'], $na_value)) ? $seo_data_tags['TwitterTitle']:''
    ),
    19 => array(
      'meta' => 'meta',
      'name' => 'twitter:description',
      'content' => (strcasecmp($seo_data_tags['TwitterDescription'], $na_value)) ? $seo_data_tags['TwitterDescription']:''
    ),
    20 => array(
      'meta' => 'meta',
     'name' => 'twitter:image',
      'content' => (strcasecmp($seo_data_tags['TwitterImage'], $na_value )) ? $seo_data_tags['TwitterImage']:''
    ),
    21 => array(
      'meta' => 'meta',
      'name' => 'twitter:url',
      'content' => (strcasecmp($seo_data_tags['TwitterUrl'], $na_value)) ? $seo_data_tags['TwitterUrl']:''
    )
  );
  $meta_tags['page_title'] = str_replace("{discount-off}", "", $seo_data_tags['Title']);
  $meta_tags['page_title'] = str_replace("{discount}", "", $meta_tags['page_title']);
  $meta_tags['page_title'] = str_replace("{%ComName%}", $community_code , $meta_tags['page_title']);
  $arg  = drupal_get_path_alias(current_path());
  $key = strpos($arg, 'reviews');
  if ($key !== false) {
    unset($meta_tags[5]);
  }
  return $meta_tags;
}

function _seo_data_get_webpageid_url($path = '') {
  $arg  = drupal_get_path_alias(current_path());
  $WebPage_table = 'WebPage';
  if (($key = strpos($arg, 'reviews')) !== false || ($key = strpos($arg, 'resources')) !== false) {
    $WebPage_table = 'WebPage_design_tool';
    $path = $_SERVER['REQUEST_URI'];
    $path_arr = explode('page/', $path);
    if(!empty($path_arr)) {
      $path = $path_arr[0];
    }

    if (strpos($path, '?') !== false) {
      $path = current(explode("?",$path ));
    }
  }
  $tanent_info = &drupal_static('tanent_info');
  if(empty($path)){
      $path = "/" . drupal_get_path_alias(current_path());
	}
  $front = '/home';
  if(strcmp($path, $front) == 0) {
    $path = '/';
  }
  $community_id = $tanent_info['community_id'];
  $query = db_select($WebPage_table, 'wp');
  $query->fields('wp', array('WebPageID'));
  $trailing_slash_or = db_or()->condition('wp.FriendlyUrl',  db_like($path)."_", 'LIKE')->condition('wp.FriendlyUrl', db_like($path), 'LIKE');
  $and_for_url_id = db_and()->condition($trailing_slash_or)->condition('wp.CommunityID', $community_id, '=');

  $query->condition($and_for_url_id);
  $webpage_id = $query->execute()->fetchField();
  return $webpage_id;
}

